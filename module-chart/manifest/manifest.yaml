---
# Source: application-connector/templates/limit-range.yaml
apiVersion: v1
kind: LimitRange
metadata:
  name: kyma-default
  namespace: kyma-system
  labels:
    release: test
    helm.sh/chart: application-connector-1.0.0
    app.kubernetes.io/name: application-connector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
spec:
  limits:
  - max:
      memory: 1024Mi # Maximum memory that a container can request
    default:
      # If a container does not specify memory limit, this default value will be applied.
      # If a container tries to allocate more memory, container will be OOM killed.
      memory: 96Mi
    defaultRequest:
      # If a container does not specify memory request, this default value will be applied.
      # The scheduler considers this value when scheduling a container to a node.
      # If a node has not enough memory, such pod will not be created.
      memory: 32Mi
    type: Container
---
# Source: application-connector/charts/central-application-connectivity-validator/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: central-application-connectivity-validator
  namespace: kyma-system
  labels:
    app: central-application-connectivity-validator
    release: test
    helm.sh/chart: central-application-connectivity-validator-0.0.1
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
---
# Source: application-connector/charts/central-application-gateway/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: central-application-gateway
  namespace: kyma-system
  labels:
    app: central-application-gateway
    release: test
    helm.sh/chart: central-application-gateway-0.1.0
    app.kubernetes.io/name: central-application-gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
---
# Source: application-connector/charts/central-application-connectivity-validator/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: central-application-connectivity-validator-role
  labels:
    app: central-application-connectivity-validator
    release: test
    helm.sh/chart: central-application-connectivity-validator-0.0.1
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
rules:
- apiGroups: ["applicationconnector.kyma-project.io"]
  resources: ["applications"]
  verbs: ["get", "list", "watch"]
---
# Source: application-connector/charts/central-application-gateway/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: central-application-gateway-role
  labels:
    app: central-application-gateway
    release: test
    helm.sh/chart: central-application-gateway-0.1.0
    app.kubernetes.io/name: central-application-gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
rules:
- apiGroups: ["applicationconnector.kyma-project.io"]
  resources: ["applications"]
  verbs: ["get"]
- apiGroups: ["*"]
  resources: ["secrets"]
  verbs: ["get"]
---
# Source: application-connector/templates/cluster-role-binding.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: test-application-connector
  labels:
    app: test
    release: test
    helm.sh/chart: application-connector-1.0.0
    app.kubernetes.io/name: application-connector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
rules:
- apiGroups: ["applicationconnector.kyma-project.io"]
  resources: ["applications"]
  verbs: ["get", "list", "update","create", "delete", "watch"]
---
# Source: application-connector/charts/central-application-connectivity-validator/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: central-application-connectivity-validator-rolebinding
  labels:
    app: central-application-connectivity-validator
    release: test
    helm.sh/chart: central-application-connectivity-validator-0.0.1
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
subjects:
- kind: User
  name: system:serviceaccount:kyma-system:central-application-connectivity-validator
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: central-application-connectivity-validator-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: application-connector/charts/central-application-gateway/templates/rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: central-application-gateway-rolebinding
  labels:
    app: central-application-gateway
    release: test
    helm.sh/chart: central-application-gateway-0.1.0
    app.kubernetes.io/name: central-application-gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
subjects:
- kind: User
  name: system:serviceaccount:kyma-system:central-application-gateway
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: central-application-gateway-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: application-connector/templates/cluster-role-binding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: test-application-connector
  labels:
    app: test
    release: test
    helm.sh/chart: application-connector-1.0.0
    app.kubernetes.io/name: application-connector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
subjects:
- kind: User
  name: system:serviceaccount:kyma-system:default
  apiGroup: rbac.authorization.k8s.io
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: test-application-connector
---
# Source: application-connector/charts/central-application-connectivity-validator/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: central-application-connectivity-validator
  namespace: kyma-system
  labels:
    application: central-application-connectivity-validator
    app: central-application-connectivity-validator
    release: test
    helm.sh/chart: central-application-connectivity-validator-0.0.1
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
spec:
  type: ClusterIP
  ports:
    - port: 8081
      protocol: TCP
      name: http-api-port
    - port: 8080
      protocol: TCP
      name: http-proxy
  selector:
    app: central-application-connectivity-validator
    release: test
---
# Source: application-connector/charts/central-application-gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: central-application-gateway
  namespace: kyma-system
  labels:
    application: central-application-gateway
    app: central-application-gateway
    release: test
    helm.sh/chart: central-application-gateway-0.1.0
    app.kubernetes.io/name: central-application-gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
spec:
  type: ClusterIP
  ports:
    - port: 8081
      protocol: TCP
      name: http-api-port
    - port: 8080
      protocol: TCP
      name: http-proxy
    - port: 8082
      protocol: TCP
      name: http-proxy-mps
  selector:
    app: central-application-gateway
    release: test
---
# Source: application-connector/charts/central-application-connectivity-validator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: central-application-connectivity-validator
  namespace: kyma-system
  labels:
    app: central-application-connectivity-validator
    release: test
    helm.sh/chart: central-application-connectivity-validator-0.0.1
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: central-application-connectivity-validator
      release: test
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: central-application-connectivity-validator
        release: test
    spec:
      serviceAccountName: central-application-connectivity-validator
      containers:
      - name: central-application-connectivity-validator
        image: eu.gcr.io/kyma-project/central-application-connectivity-validator:v20221014-8d4d8cf0
        imagePullPolicy: IfNotPresent
        args:
          - "/app/centralapplicationconnectivityvalidator"
          - "--proxyPort=8080"
          - "--externalAPIPort=8081"
          - "--eventingPathPrefixV1=/%%APP_NAME%%/v1/events"
          - "--eventingPathPrefixV2=/%%APP_NAME%%/v2/events"
          - "--eventingPublisherHost=eventing-event-publisher-proxy.kyma-system"
          - "--eventingDestinationPath=/publish"
          - "--eventingPathPrefixEvents=/%%APP_NAME%%/events"
          - "--appNamePlaceholder=%%APP_NAME%%"
          - "--cacheExpirationSeconds=90"
          - "--cacheCleanupIntervalSeconds=15"
        env:
          - name: APP_LOG_FORMAT
            value: "json"
          - name: APP_LOG_LEVEL
            value: "warn"
        readinessProbe:
          httpGet:
            path: /v1/health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /v1/health
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 20m
            memory: 64Mi
        ports:
          - containerPort: 8080
            name: http-proxy
          - containerPort: 8081
            name: http-api-port
        securityContext:
          runAsUser: 1000
          privileged: false
          allowPrivilegeEscalation: false
---
# Source: application-connector/charts/central-application-gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: central-application-gateway
  namespace: kyma-system
  labels:
    app: central-application-gateway
    release: test
    helm.sh/chart: central-application-gateway-0.1.0
    app.kubernetes.io/name: central-application-gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      app: central-application-gateway
      release: test
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: central-application-gateway
        release: test
    spec:
      serviceAccountName: central-application-gateway
      containers:
      - name: central-application-gateway
        image: eu.gcr.io/kyma-project/central-application-gateway:v20221014-ec1ce988
        imagePullPolicy: IfNotPresent
        args:
          - "/app/applicationgateway"
          - "--proxyPort=8080"
          - "--proxyPortCompass=8082"
          - "--externalAPIPort=8081"
          - "--applicationSecretsNamespace=kyma-system"
          - "--requestTimeout=10"
          - "--proxyTimeout=10"
          - "--proxyCacheTTL=120"
          - "--requestLogging=false"
        readinessProbe:
          httpGet:
            path: /v1/health
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /v1/health
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 20m
            memory: 64Mi
        ports:
          - containerPort: 8080
            name: http-proxy
          - containerPort: 8082
            name: http-proxy-mps
          - containerPort: 8081
            name: http-api-port
        securityContext:
          runAsUser: 1000
          privileged: false
          allowPrivilegeEscalation: false
---
# Source: application-connector/charts/central-application-connectivity-validator/templates/autoscaling.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: central-application-connectivity-validator
  namespace: kyma-system
  labels:
    app: central-application-connectivity-validator
    release: test
    helm.sh/chart: central-application-connectivity-validator-0.0.1
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
spec:
  minReplicas: 1
  maxReplicas: 10
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: central-application-connectivity-validator
  targetCPUUtilizationPercentage: 80
---
# Source: application-connector/charts/central-application-gateway/templates/hpa.yaml
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: central-application-gateway
  namespace: kyma-system
  labels:
    app: central-application-gateway
    release: test
    helm.sh/chart: central-application-gateway-0.1.0
    app.kubernetes.io/name: central-application-gateway
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
spec:
  minReplicas: 2
  maxReplicas: 10
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: central-application-gateway
  targetCPUUtilizationPercentage: 80
---
# Source: application-connector/templates/application-connector-gateway.yaml
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: kyma-gateway-application-connector
  namespace: kyma-system
  labels:
    release: test
    helm.sh/chart: application-connector-1.0.0
    app.kubernetes.io/name: application-connector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
spec:
  selector:
    istio: ingressgateway # use istio default ingress gateway
  servers:
    - port:
        name: https-app-connector
        number: 443
        protocol: HTTPS
      tls:
        mode: MUTUAL
        credentialName: kyma-gateway-certs
        minProtocolVersion: TLSV1_2
        cipherSuites:
        - ECDHE-RSA-CHACHA20-POLY1305
        - ECDHE-RSA-AES256-GCM-SHA384
        - ECDHE-RSA-AES256-SHA
        - ECDHE-RSA-AES128-GCM-SHA256
        - ECDHE-RSA-AES128-SHA
      hosts:
        - "gateway.kyma.example.com"
---
# Source: application-connector/charts/central-application-connectivity-validator/templates/virtual-service.yaml
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: central-application-connectivity-validator
  namespace: kyma-system
  labels:
    app: central-application-connectivity-validator
    release: test
    helm.sh/chart: central-application-connectivity-validator-0.0.1
    app.kubernetes.io/name: central-application-connectivity-validator
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/instance: test
spec:
  hosts:
    - gateway.kyma.example.com
  gateways:
    - kyma-system/kyma-gateway-application-connector
  http:
    - match:
        - uri:
            regex: ^/[^/]+/v1/metadata(/|/.*)?
        - uri:
            regex: ^/[^/]+/v1/events(/|/.*)?
        - uri:
            regex: ^/[^/]+/v2/events(/|/.*)?
        - uri:
            regex: ^/[^/]+/events(/|/.*)?
      route:
        - destination:
            port:
              number: 8080
            host: central-application-connectivity-validator
