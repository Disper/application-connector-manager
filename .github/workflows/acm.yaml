name: ACM

on:
  push:
    branches:
      - main
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
      - '[0-9]+.[0-9]+.[0-9]+-*'
    paths:
      - .github/workflows/acm.yaml
      - main.go
      - api/**
      - pkg/**
      - controllers/**
      - application-connector.yaml
      - application-connector-dependencies.yaml
      - go.sum
      - go.mod
      - Dockerfile

  pull_request_target:
    types: [opened, synchronize, reopened]
    paths:
      - .github/workflows/acm.yaml
      - main.go
      - api/**
      - pkg/**
      - controllers/**
      - application-connector.yaml
      - application-connector-dependencies.yaml
      - go.sum
      - go.mod
      - Dockerfile

permissions:
  id-token: write # This is required for requesting the JWT token
  contents: read # This is required for actions/checkout

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - id: tag
        if: github.event_name == 'push' && github.ref_type == 'tag'
        run: echo "tag=${{ github.ref_name }}" >> $GITHUB_OUTPUT

  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up go environment
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
    - name: Run unit tests
      run: make test | tee test.log
    - uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: test.log
        path: test.log

  build-image:
    needs: setup
    uses: kyma-project/test-infra/.github/workflows/image-builder.yml@main # Usage: kyma-project/test-infra/.github/workflows/image-builder.yml@main
    with:
      name: application-connector-manager
      dockerfile: Dockerfile
      context: .
      tags: ${{ needs.setup.outputs.tag }}

  summary:
    needs: [setup, build-image]
    steps:
      - run: |
          echo "# ACM Build" >> $GITHUB_STEP_SUMMARY
          echo "## images" >> $GITHUB_STEP_SUMMARY
          echo "```json" >> $GITHUB_STEP_SUMMARY
          echo "${{ needs.build-image.outputs.images }}" | jq >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
