From ce087c6b31cf0371f64d610d1baa244acba82234 Mon Sep 17 00:00:00 2001
From: m00g3n <marcin.witalis@sap.com>
Date: Tue, 25 Oct 2022 15:24:47 +0200
Subject: [PATCH] update application connector API

---
 .../v1alpha1/applicationconnector_types.go    | 26 ++++++++++++-------
 .../api/v1alpha1/zz_generated.deepcopy.go     | 15 -----------
 ...kyma-project.io_applicationconnectors.yaml |  5 ++++
 .../applicationconnector_controller.go        | 20 ++++----------
 4 files changed, 27 insertions(+), 39 deletions(-)

diff --git a/operator/api/v1alpha1/applicationconnector_types.go b/operator/api/v1alpha1/applicationconnector_types.go
index b413089..b340ca4 100644
--- a/operator/api/v1alpha1/applicationconnector_types.go
+++ b/operator/api/v1alpha1/applicationconnector_types.go
@@ -26,13 +26,7 @@ import (
 
 // ApplicationConnectorSpec defines the desired state of ApplicationConnector
 type ApplicationConnectorSpec struct {
-	//DisableLegacyConnectivity string `json:"disableLegacyConnectivity"`
-}
-
-// ApplicationConnectorStatus defines the observed state of ApplicationConnector
-type ApplicationConnectorStatus struct {
-	// INSERT ADDITIONAL STATUS FIELD - define observed state of cluster
-	// Important: Run "make" to regenerate code after modifying this file
+	DisableLegacyConnectivity string `json:"disableLegacyConnectivity"`
 }
 
 //+kubebuilder:object:root=true
@@ -43,8 +37,8 @@ type ApplicationConnector struct {
 	metav1.TypeMeta   `json:",inline"`
 	metav1.ObjectMeta `json:"metadata,omitempty"`
 
-	//Spec   ApplicationConnectorSpec `json:"spec,omitempty"`
-	Status types.Status `json:"status,omitempty"`
+	Spec   ApplicationConnectorSpec `json:"spec,omitempty"`
+	Status types.Status             `json:"status,omitempty"`
 }
 
 //+kubebuilder:object:root=true
@@ -59,3 +53,17 @@ type ApplicationConnectorList struct {
 func init() {
 	SchemeBuilder.Register(&ApplicationConnector{}, &ApplicationConnectorList{})
 }
+
+var _ types.CustomObject = &ApplicationConnector{}
+
+func (s *ApplicationConnector) GetStatus() types.Status {
+	return s.Status
+}
+
+func (s *ApplicationConnector) SetStatus(status types.Status) {
+	s.Status = status
+}
+
+func (s *ApplicationConnector) ComponentName() string {
+	return "application-connector"
+}
diff --git a/operator/api/v1alpha1/zz_generated.deepcopy.go b/operator/api/v1alpha1/zz_generated.deepcopy.go
index 2aeff6b..abd005e 100644
--- a/operator/api/v1alpha1/zz_generated.deepcopy.go
+++ b/operator/api/v1alpha1/zz_generated.deepcopy.go
@@ -98,18 +98,3 @@ func (in *ApplicationConnectorSpec) DeepCopy() *ApplicationConnectorSpec {
 	in.DeepCopyInto(out)
 	return out
 }
-
-// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
-func (in *ApplicationConnectorStatus) DeepCopyInto(out *ApplicationConnectorStatus) {
-	*out = *in
-}
-
-// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationConnectorStatus.
-func (in *ApplicationConnectorStatus) DeepCopy() *ApplicationConnectorStatus {
-	if in == nil {
-		return nil
-	}
-	out := new(ApplicationConnectorStatus)
-	in.DeepCopyInto(out)
-	return out
-}
diff --git a/operator/config/crd/bases/operator.kyma-project.io_applicationconnectors.yaml b/operator/config/crd/bases/operator.kyma-project.io_applicationconnectors.yaml
index e04cd77..4472be9 100644
--- a/operator/config/crd/bases/operator.kyma-project.io_applicationconnectors.yaml
+++ b/operator/config/crd/bases/operator.kyma-project.io_applicationconnectors.yaml
@@ -35,6 +35,11 @@ spec:
             type: object
           spec:
             description: ApplicationConnectorSpec defines the desired state of ApplicationConnector
+            properties:
+              disableLegacyConnectivity:
+                type: string
+            required:
+            - disableLegacyConnectivity
             type: object
           status:
             description: Status defines the observed state of CustomObject.
diff --git a/operator/controllers/applicationconnector_controller.go b/operator/controllers/applicationconnector_controller.go
index 0d8de77..16a5c79 100644
--- a/operator/controllers/applicationconnector_controller.go
+++ b/operator/controllers/applicationconnector_controller.go
@@ -17,7 +17,6 @@ limitations under the License.
 package controllers
 
 import (
-	"context"
 	"encoding/json"
 	"fmt"
 	"github.com/go-logr/logr"
@@ -27,7 +26,6 @@ import (
 	"k8s.io/apimachinery/pkg/runtime"
 	ctrl "sigs.k8s.io/controller-runtime"
 	"sigs.k8s.io/controller-runtime/pkg/client"
-	"sigs.k8s.io/controller-runtime/pkg/log"
 
 	"github.com/kyma-project/module-manager/operator/pkg/declarative"
 
@@ -63,14 +61,6 @@ func (r *ApplicationConnectorReconciler) initReconciler(mgr ctrl.Manager) error
 	)
 }
 
-func (r *ApplicationConnectorReconciler) Reconcile(ctx context.Context, req ctrl.Request) (ctrl.Result, error) {
-	_ = log.FromContext(ctx)
-
-	// TODO(user): your logic here
-
-	return ctrl.Result{}, nil
-}
-
 // SetupWithManager sets up the controller with the Manager.
 func (r *ApplicationConnectorReconciler) SetupWithManager(mgr ctrl.Manager) error {
 	r.Config = mgr.GetConfig()
@@ -107,11 +97,11 @@ func (m *ManifestResolver) Get(obj types.BaseCustomObject, logger logr.Logger) (
 			fmt.Errorf("invalid type conversion for %s", client.ObjectKeyFromObject(obj))
 	}
 
-	//flags, err := structToFlags(sample.Spec)
-	//if err != nil {
-	//	return types.InstallationSpec{},
-	//		fmt.Errorf("resolving manifest failed: %w", err)
-	//}
+	flags, err := structToFlags(sample.Spec)
+	if err != nil {
+		return types.InstallationSpec{},
+			fmt.Errorf("resolving manifest failed: %w", err)
+	}
 
 	return types.InstallationSpec{
 		ChartPath: m.chartPath,
-- 
2.37.0 (Apple Git-136)